# Note: for some reason, ghcr.io/chainguard/wolfi-base does something which prevents flatwrapped
# binaries from working in this demo, so none of these work:
#FROM cgr.dev/chainguard/wolfi-base:latest as original
#FROM ghcr.io/ublue-os/wolfi-toolbox:latest as original
#FROM ghcr.io/ublue-os/bluefin-cli:latest as original

# So instead (as a quick-and-dirty proof-of-concept) we manually add the packages added by
# bluefin-cli, except for commands already available on ublue-os/base-main:
#FROM alpine:latest as original
FROM cgr.dev/chainguard/wolfi-base:latest as original
RUN apk -U add \
  atuin \
  brew \
  delta \
  eza \
  fd \
  fish \
  rclone \
  ripgrep \
  starship \
  zoxide \
  zsh

FROM alpine:latest as flatwrapped
RUN apk -U add \
  bubblewrap \
  bash \
  coreutils \
  squashfs-tools btrfs-progs e2fsprogs e2fsprogs-extra
COPY --from=original /bin /tmp/original/bin
COPY --from=original /etc /tmp/original/etc
COPY --from=original /lib /tmp/original/lib
COPY --from=original /sbin /tmp/original/sbin
COPY --from=original /usr /tmp/original/usr
COPY flatwrap.sh bake.sh .
RUN \
  OS="_any" ARCH="" RELOAD="0" KEEP="1" \
  ./flatwrap.sh /tmp/original bluefin-cli \
    /usr/bin/rclone
    # Temporarily disabled for troubleshooting:
    #/usr/bin/atuin
    #/usr/bin/atuin \
    #/usr/bin/delta \
    #/usr/bin/eza \
    #/usr/bin/fd \
    #/usr/bin/fish \
    #/usr/bin/rclone \
    #/usr/bin/rg \
    #/usr/bin/starship \
    #/usr/bin/zoxide \
    #/bin/zsh:/usr/bin/zsh \
    #/home/homebrew/.linuxbrew/bin/brew:/usr/bin/brew

FROM scratch
COPY --from=flatwrapped bluefin-cli/usr /usr
COPY extension-release-any /usr/lib/extension-release.d/extension-release.bluefin-cli
