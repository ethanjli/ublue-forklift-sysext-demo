[Unit]
Description=Mount the Forklift stage store into the default path for the Forklift workspace at %I
Requires=-.mount
After=-.mount
Wants=home.mount
After=home.mount
Conflicts=umount.target
Before=umount.target

[Service]
# This is implemented as a service rather than a mount so that we can have a unit name which isn't
# bound to the home directory of a specific user.
Type=oneshot
RemainAfterExit=true
Environment=SOURCE=/var/lib/forklift/stages
ExecStartPre=mkdir -p /var/lib/forklift/stages
Environment=TARGET=%I/.local/share/forklift/stages
ExecStartPre=mkdir -p $TARGET
# We want the user to be able to run forklift commands without `sudo -E`, so we mount it with user
# ownership rather than the default of root ownership; this should probably be considered a kludge
# to allow Forklift's own CLI design to stay simple, and we may be able to simplify things by
# improving Forklift's design (idk):
ExecStart=bash -c '\
  export MOUNT_UID=$(stat -c "%%u" %I) && \
  export MOUNT_GID=$(stat -c "%%g" %I) && \
  mount -o bind,uid=$MOUNT_UID,gid=$MOUNT_GID $SOURCE $TARGET \
'
# Note: `umount -l` is not recommended in general (see https://unix.stackexchange.com/a/390057)
# because it just removes the mounts from the namespace while writes to open files can continue;
# however, we have a read-only mount so it doesn't matter
ExecStopPost=umount -l $TARGET

[Install]
WantedBy=default.target
